name: Release
on:
  push:
    tags:
      - "v*"
  release:
    types: ["created"]
jobs:
  release:
    name: Creating Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag_name: ${{ steps.get_version.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - id: get_version
        run: echo "::set-output name=tag_name::${GITHUB_REF/refs\/tags\/}"
      - run: npm install
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
  upload_artifacts_linux:
    name: Upload Artifacts - Ubuntu
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - run: npm install
      - run: sudo apt-get install p7zip
      - run: npx oclif-dev pack
      - run: npx oclif-dev publish
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      - run: sudo npx oclif-dev pack:deb
      - run: npx oclif-dev publish:deb
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./dist/deb/slash-graphql-${{ needs.release.outputs.tag_name }}.deb
          asset_name: slash-graphql-${{ needs.release.outputs.tag_name }}.deb
          asset_content_type: application/vnd.debian.binary-package
  upload_artifacts_osx:
    name: Upload Artifacts - MacOS
    needs: release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - run: npm install
      - run: npx oclif-dev pack:macos
      - run: npx oclif-dev publish:macos
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./dist/macos/slash-graphql-${{ needs.release.outputs.tag_name }}.pkg
          asset_name: slash-graphql-${{ needs.release.outputs.tag_name }}.pkg
          asset_content_type: application/x-newton-compatible-pkg
  upload_artifacts_win:
    name: Upload Artifacts - Windows
    needs: release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - run: npm install
      - run: npx oclif-dev pack:win
      - run: npx oclif-dev publish:win
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./dist/win/slash-graphql-${{ needs.release.outputs.tag_name }}.exe
          asset_name: slash-graphql-${{ needs.release.outputs.tag_name }}.exe
          asset_content_type: application/octet-stream
